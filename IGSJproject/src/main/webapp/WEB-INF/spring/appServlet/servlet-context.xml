<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:c="http://www.springframework.org/schema/c" xmlns:p="http://www.springframework.org/schema/p" xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="ezen.project.IGSJ" />
	<context:component-scan base-package="ezen.project.IGSJ.member" />
	<context:component-scan base-package="ezen.project.IGSJ.address" />
	<context:component-scan base-package="ezen.project.IGSJ.category" />
	<context:component-scan base-package="ezen.project.IGSJ.product" />
	<context:component-scan base-package="ezen.project.IGSJ.productFile" />
	<context:component-scan base-package="ezen.project.IGSJ.seller" />
	<context:component-scan base-package="ezen.project.IGSJ.utils" />
	<context:component-scan base-package="ezen.project.IGSJ.order" />

	<!-- 파일 업로드 -->
	<!-- 파일 업로드 경로 -->
	<beans:bean class="java.lang.String" id="uploadPath"> <!-- uploadPath라는 id, class=String은 생성자의 매개변수가 String이라는 의미 -->
		<beans:constructor-arg value="C:\Users\jaeku\git\IGSJ-ReProject\IGSJproject\src\main\webapp\resources"></beans:constructor-arg>
	</beans:bean>

	<!-- 일반 파일 업로드 경로 -->
	<resources mapping="/imgUpload/**" location="/resources/imgUpload/" /> <!-- <=/imgUpload/~ 를 통해 들어오면 location으로 저장 -->
	<beans:bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
		<beans:property name="maxUploadSize" value="15485760"></beans:property>
	</beans:bean>

	<!-- 대체 이미지 파일 경로 -->
	<resources mapping="/images/**" location="/resources/images/" />

	<resources mapping="/ckUpload/**" location="/resources/ckUpload/" />
	<!-- 파일 업로드 끝 -->


	<beans:bean id="AdminInterceptor" class="ezen.project.IGSJ.utils.interceptor.AdminInterceptor" />
	<beans:bean id="SellerInterceptor" class="ezen.project.IGSJ.utils.interceptor.SellerInterceptor" />
	<beans:bean id="LoggerInterceptor" class="ezen.project.IGSJ.utils.interceptor.LoggerInterceptor" />

	<interceptors>
		<interceptor>
			<mapping path="/admin/*" />
			<beans:ref bean="AdminInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/seller/*" />
			<beans:ref bean="SellerInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/**"/>
			<exclude-mapping path="/resources/**"/>
			<beans:ref bean="LoggerInterceptor"/>
		</interceptor>
	</interceptors>

</beans:beans>
